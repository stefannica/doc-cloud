<?xml version="1.0"?>
<!DOCTYPE section [
 <!ENTITY % entities SYSTEM "entities.ent"> %entities;
]>
<!---->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="api_verification"><title><phrase><phrase><phrase><phrase>&kw-hos-tm; &kw-hos-version-50;: </phrase></phrase></phrase></phrase>API Verification</title><abstract><para><para>We provide a tool and some steps to help you verify
      that your cloud deployed correctly.</para></para>
</abstract>

    <para><para xml:id="idg-all-installation-api_verification-xml-4"><phrase><phrase/></phrase></para></para>

    <sidebar xml:id="idg-all-installation-api_verification-xml-6"><para>&kw-hos-phrase; provides a tool, Tempest, that you can use to verify that
        your cloud deployment completed successfully:</para>
<itemizedlist>
        <listitem><para><link xlink:href="#api_verification/prereqs">Prerequisites</link></para>
</listitem>
        <listitem><para><link xlink:href="#api_verification/tempest">Tempest Integration Tests</link></para>
<itemizedlist>
            <listitem><para><link xlink:href="#api_verification/running">Running the Tests</link></para>
</listitem>
            <listitem><para><link xlink:href="#api_verification/results">Viewing Test Results</link></para>
</listitem>
            <listitem><para><link xlink:href="#api_verification/custom">Customizing the Test Run</link></para>
</listitem>
          </itemizedlist></listitem>
        <listitem/>
        <listitem/>
      </itemizedlist></sidebar>

    <sidebar xml:id="idg-all-installation-api_verification-xml-7"><title>Prerequisites</title><para>The verification tests rely on you having an external network setup and a cloud image in
        your image (Glance) repository. Run the following playbook to configure your cloud: </para>
<screen >cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts hlm-cloud-configure.yml</screen></sidebar>

    <sidebar xml:id="tempest"><title>Tempest Integration Tests</title><para>Tempest is a set of integration tests for OpenStack API validation, scenarios, and other
        specific tests to be run against a live OpenStack cluster. 
      
      In &kw-hos-phrase;,  Tempest has been modelled as a service and this gives you the ability to 
            locate Tempest anywhere in the cloud. It is recommended that you install Tempest on your lifecycle manager node
          - that is where it resides by default in a new installation.
      </para>
<para>A version of the upstream <link xlink:href="http://docs.openstack.org/developer/tempest/">Tempest</link> integration tests is pre-deployed on the
          &kw-hos; lifecycle manager node. For details on what Tempest is testing,
        you can check the contents of this file on your lifecycle
        manager:</para>
<screen >/opt/stack/tempest/run_filters/ci.txt</screen>
<para>You can use these embedded tests to verify if the deployed cloud is functional.</para>
<para>For more information on running Tempest tests, see <link xlink:href="https://git.openstack.org/cgit/openstack/tempest/tree/README.rst">Tempest - The OpenStack Integration Test Suite</link>. </para>
<important><para>Running these tests requires access to the deployed cloud's identity
          admin credentials</para>
</important>
<para>Tempest creates and deletes test accounts and test resources for test purposes.</para>
<para>In certain cases Tempest might fail to clean-up some of test resources after a test is
        complete, for example in case of failed tests.</para>
</sidebar>
    <sidebar xml:id="running"><title>Running the Tests</title><para>To run the default set of Tempest tests:</para>
<orderedlist>
        <listitem><para>Log in to the lifecycle manager.</para>
</listitem>
        <listitem><para>Ensure you can access your cloud:
          </para>
<screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts cloud-client-setup.yml
source /etc/environment</screen></listitem>
        <listitem><para>Run the tests:
          </para>
<screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts tempest-run.yml</screen></listitem>
      </orderedlist><para>Optionally, you can <link xlink:href="#api_verification/custom">customize Tempest
          to run specific tests</link>.</para>
</sidebar>
    
    <sidebar xml:id="results"><title>Viewing Test Results</title><para>Tempest is deployed under <literal>/opt/stack/tempest</literal>. Test results are written in
        a log file in the following directory:</para>
<screen >/opt/stack/tempest/logs</screen><para>A detailed log file is written to:
        </para>
<screen >/opt/stack/tempest/tempest.log</screen>
<para>The results are also stored in the <literal>testrepository</literal> database.</para>
<para>To access the results after the run:</para>
<orderedlist>
        <listitem><para>Log in to the lifecycle manager.</para>
</listitem>
        <listitem><para>Change to the <literal>tempest</literal> directory and list the test results:</para>
<screen>cd /opt/stack/tempest
./venv/bin/testr last</screen></listitem>
      </orderedlist><important><para>If you encounter an error saying "local variable 'run_subunit_content'
        referenced before assignment", you may need to log in as the <literal>tempest</literal> user
        to run this command. This is due to a known issue as reported <link xlink:href="https://bugs.launchpad.net/testrepository/+bug/1348970">here</link>.</para>
</important><para>See <link xlink:href="https://testrepository.readthedocs.org/en/latest/">Test Repository Users Manual</link> for more details on how to manage the
        test result repository.</para>
</sidebar>
    
    
    
    <sidebar xml:id="custom"><title>Customizing the Test Run</title><para>There are several ways available to customize which tests will be executed.</para>
<itemizedlist>
          <!---->
          <listitem><para><link xlink:href="#api_verification/services">Run Tests for Specific Services
              and Exclude Specific Features</link></para>
</listitem>
          <listitem><para><link xlink:href="#api_verification/list">Run Tests Matching a Series of White
              and Blacklists</link></para>
</listitem>
        </itemizedlist>
</sidebar>
    <!---->
    <sidebar xml:id="idg-all-installation-api_verification-xml-12"><title>Run Tests for Specific Services and Exclude Specific
        Features</title><para>Tempest allows you to test specific services and features using the
          <literal>tempest.conf</literal> configuration file.</para>
<para>A working configuration file with inline documentation is deployed under
          <literal>/opt/stack/tempest/etc/</literal>.</para>
<para>To use this, follow these steps:</para>
<orderedlist>
        <listitem><para>Log in to the lifecycle manager.</para>
</listitem>
        <listitem><para>Edit the <literal>/opt/stack/tempest/configs/tempest_region1.conf</literal> file.</para>
</listitem>
        <listitem><para>To test specific service, edit the <literal>[service_available]</literal> section and
          clear the comment character <literal>#</literal> and set a line to <literal>true</literal> to
          test that service or <literal>false</literal> to not test that service.
          </para>
<screen>cinder = true
neutron = false</screen></listitem>
        <listitem><para>To test specific features, edit any of the <literal>*_feature_enabled</literal> sections
            to enable or disable tests on specific features of a service.
          </para>
<screen>[volume-feature-enabled]
[compute-feature-enabled]
[identity-feature-enabled]
[image-feature-enabled]
[network-feature-enabled]
[object-storage-feature-enabled]</screen><screen>#Is the v2 identity API enabled (boolean value)
api_v2 = true
#Is the v3 identity API enabled (boolean value)
api_v3 = false</screen></listitem>
        <listitem><para>Then run tests normally</para>
</listitem>
      </orderedlist></sidebar>
    <sidebar xml:id="idg-all-installation-api_verification-xml-13"><title>Run Tests Matching a Series of White and Blacklists</title><para>You can run tests against specific scenarios by editing or creating a run filter file.</para>
<para>Run filter files are deployed under <literal>/opt/stack/tempest/run_filters</literal>.</para>
<para>Use run filters to whitelist or blacklist specific tests or groups of tests:</para>
<itemizedlist>
        <listitem><para>lines starting with # or empty are ignored</para>
</listitem>
        <listitem><para>lines starting with <literal>+</literal> are whitelisted</para>
</listitem>
        <listitem><para>lines starting with <literal>-</literal> are blacklisted</para>
</listitem>
        <listitem><para>lines not matching any of the above conditions are blacklisted</para>
</listitem>
      </itemizedlist><para>If whitelist is empty, all available tests are fed to blacklist. If blacklist is empty, all
        tests from whitelist are returned.</para>
<para>Whitelist is applied first. The blacklist is executed against the set of tests returned by
        the whitelist.</para>
<para>To run whitelist and blacklist tests:</para>
<orderedlist>
        <listitem><para>Log in to the lifecycle manager. </para>
</listitem>
        <listitem><para>Make sure you can access the cloud:
          </para>
<screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts cloud-client-setup.yml
source /etc/environment</screen></listitem>
        <listitem><para>Run the tests:
          </para>
<screen>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts tempest-run.yml  -e run_filter &lt;run_filter_name&gt;</screen></listitem>
      </orderedlist><para>Note that the run_filter_name is the name of the run_filter file except for the extension.
        For instance, to run using the filter from the file /opt/stack/tempest/run_filters/ci.txt,
        use the following:</para>
<screen >ansible-playbook -i hosts/verb_hosts tempest-run.yml -e run_filter=ci</screen><para>Documentation on the format of white and black-lists is available at:
        </para>
<screen >/opt/stack/tempest/tests2skip.py</screen>
<para>Example:</para>
<para>The following entries run API tests, exclude tests that are less relevant for deployment
        validation, such as negative, admin, cli and thirdparty (EC2) tests:</para>
<screen >+tempest\.api\.*
*[Aa]dmin.*
*[Nn]egative.*
- tempest\.cli.*
- tempest\.thirdparty\.*</screen></sidebar>
    <!---->
  </section>
